// Code generated by MockGen. DO NOT EDIT.
// Source: client.go
//
// Generated by this command:
//
//	mockgen -source=client.go -package=mock_confluence -destination=./mock/mock_client.go
//

// Package mock_confluence is a generated GoMock package.
package mock_confluence

import (
	reflect "reflect"

	model "github.com/jackchuka/confluence-md/internal/confluence/model"
	gomock "go.uber.org/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
	isgomock struct{}
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// DownloadAttachmentContent mocks base method.
func (m *MockClient) DownloadAttachmentContent(attachment *model.ConfluenceAttachment) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadAttachmentContent", attachment)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DownloadAttachmentContent indicates an expected call of DownloadAttachmentContent.
func (mr *MockClientMockRecorder) DownloadAttachmentContent(attachment any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadAttachmentContent", reflect.TypeOf((*MockClient)(nil).DownloadAttachmentContent), attachment)
}

// GetChildPages mocks base method.
func (m *MockClient) GetChildPages(pageID string) ([]*model.ConfluencePage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChildPages", pageID)
	ret0, _ := ret[0].([]*model.ConfluencePage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChildPages indicates an expected call of GetChildPages.
func (mr *MockClientMockRecorder) GetChildPages(pageID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChildPages", reflect.TypeOf((*MockClient)(nil).GetChildPages), pageID)
}

// GetPage mocks base method.
func (m *MockClient) GetPage(pageID string) (*model.ConfluencePage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPage", pageID)
	ret0, _ := ret[0].(*model.ConfluencePage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPage indicates an expected call of GetPage.
func (mr *MockClientMockRecorder) GetPage(pageID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPage", reflect.TypeOf((*MockClient)(nil).GetPage), pageID)
}
